import { e as createAstro, f as createComponent, r as renderTemplate, n as renderScript, x as defineScriptVars, h as addAttribute, m as maybeRenderHead } from "./astro/server-Crfne28A.js";
import "kleur/colors";
import "clsx";
import { s as siteConfig } from "./Footer-BijWoSSf.js";
var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(cooked.slice()) }));
var _a;
const $$Astro = createAstro("https://ez2fix.com");
const $$BookingForm = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$BookingForm;
  const {
    variant = "inline",
    showTitle = true,
    title = "Get Your Free Estimate",
    subtitle = "Tell us about your garage door issue and we'll provide an honest, detailed estimate.",
    buttonText = "Get My Free Estimate",
    buttonStyle = "background: linear-gradient(135deg, #D2A63C 0%, #EECD5C 100%); color: #1D1912;",
    service = "",
    location = "",
    theme = "light"
  } = Astro2.props;
  const services = [
    "Spring Replacement",
    "Opener Repair",
    "New Door Installation",
    "Cable & Track Repair",
    "Maintenance Service",
    "Safety Inspection"
  ];
  const formClasses = {
    hero: "space-y-3",
    inline: "space-y-4",
    modal: "space-y-3",
    "service-hero": "space-y-4",
    "service-cta": "space-y-4",
    "area-hero": "space-y-4"
  };
  const inputClasses = {
    hero: "w-full px-3 py-2 text-sm rounded-lg border-2 focus:outline-none focus:border-opacity-100 transition-colors",
    inline: "w-full px-4 py-3 text-base rounded-lg border-2 focus:outline-none focus:border-opacity-100 transition-colors",
    modal: "w-full px-3 py-2 text-base rounded-lg border-2 focus:outline-none focus:border-opacity-100 transition-colors",
    "service-hero": "w-full px-4 py-3 text-base rounded-lg border-2 focus:outline-none focus:border-opacity-100 transition-colors",
    "service-cta": "w-full px-4 py-3 text-base rounded-lg border-2 focus:outline-none focus:border-opacity-100 transition-colors",
    "area-hero": "w-full px-4 py-3 text-base rounded-lg border-2 focus:outline-none focus:border-opacity-100 transition-colors"
  };
  const buttonClasses = {
    hero: "w-full py-2 px-3 text-sm font-bold rounded-lg transition-all duration-300 hover:shadow-lg",
    inline: "w-full py-4 px-6 text-lg font-bold rounded-lg transition-all duration-300 hover:shadow-lg transform hover:scale-105",
    modal: "w-full py-3 px-6 text-base font-bold rounded-lg transition-all duration-300 hover:shadow-lg",
    "service-hero": "w-full py-3 px-6 text-lg font-bold rounded-lg transition-all duration-300 hover:shadow-lg",
    "service-cta": "w-full py-3 px-6 text-base font-bold rounded-lg transition-all duration-300 hover:shadow-lg",
    "area-hero": "w-full py-3 px-6 text-lg font-bold rounded-lg transition-all duration-300 hover:shadow-lg"
  };
  return renderTemplate(_a || (_a = __template(["", '<div class="booking-form-container"> ', " <form", ' id="booking-form"', "> <!-- Name --> <div> <label", "", ' style="color: #1D1912;">Your Name*</label> <input type="text"', ' name="name" required', "", ' style="border-color: #EECD5C; background-color: white;" placeholder="Enter your full name"> <div', ' class="text-red-600 text-xs mt-1 hidden" role="alert"></div> </div> <!-- Phone --> <div> <label', "", ' style="color: #1D1912;">Phone Number*</label> <input type="tel"', ' name="phone" required', ' pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}"', ' style="border-color: #EECD5C; background-color: white;"', "> <div", ' class="text-red-600 text-xs mt-1 hidden" role="alert"></div> </div> ', " <!-- Service Address --> <div> <label", "", ' style="color: #1D1912;">Service Address*</label> <!-- Street Address with Autocomplete --> <div class="mb-2"> <input type="text"', ' name="street" required', "", ' style="border-color: #EECD5C; background-color: white;" placeholder="Enter street address" autocomplete="address-line1"> <div', ' class="text-red-600 text-xs mt-1 hidden" role="alert"></div> </div> <!-- City, State, Zip Row --> <div', '> <div> <input type="text"', ' name="city" required', "", ' style="border-color: #EECD5C; background-color: white;" placeholder="City" autocomplete="address-level2"> <div', ' class="text-red-600 text-xs mt-1 hidden" role="alert"></div> </div> <div> <input type="text"', ' name="state" required', "", ' style="border-color: #EECD5C; background-color: white;" placeholder="State" autocomplete="address-level1" value="NJ" readonly> <div', ' class="text-red-600 text-xs mt-1 hidden" role="alert"></div> </div> ', " </div> ", " </div> <!-- Service Type --> <div> <label", "", ' style="color: #1D1912;">Service Needed*</label> <select', ' name="service" required', "", ' style="border-color: #EECD5C; background-color: white;"> <option value="">What can we help with?</option> ', ' <option value="Not Sure"', ">Not Sure - Need Diagnosis</option> ", " </select> <div", ' class="text-red-600 text-xs mt-1 hidden" role="alert"></div> </div> <!-- Urgency --> ', " <!-- Description --> ", ' <!-- Consent Checkbox --> <div> <div class="flex items-start space-x-2"> <input type="checkbox"', ' name="consent" required', ' class="mt-0.5 h-4 w-4 rounded border-2 focus:outline-none focus:ring-2 focus:ring-offset-1" style="border-color: #EECD5C; background-color: white; color: #D2A63C; focus:ring-color: #D2A63C;"> <label', "", ' style="color: #1D1912;">\nI agree to receive service updates via call, text, or email, and I accept the\n<a href="/privacy-policy" class="underline hover:no-underline" style="color: #D2A63C;" target="_blank">Privacy Policy</a> and\n<a href="/terms-of-service" class="underline hover:no-underline" style="color: #D2A63C;" target="_blank">Terms & Conditions</a>.*\n</label> </div> <div', ' class="text-red-600 text-xs mt-1 hidden" role="alert"></div> </div> <!-- Submit Button --> <button type="submit"', "", "> ", " </button> ", " </form> </div> <!-- Google Places API - Deferred for performance --> ", " <!-- Environment Variables for Client-side --> <script>(function(){", "\n  window.RECAPTCHA_SITE_KEY = recaptchaKey || '';\n})();<\/script> ", ""])), maybeRenderHead(), showTitle && renderTemplate`<div${addAttribute(variant === "hero" ? "mb-3" : "mb-6", "class")}> <h3${addAttribute(variant === "hero" ? "text-base md:text-lg font-bold mb-1" : "text-xl md:text-2xl lg:text-3xl font-bold mb-3", "class")} style="color: #1D1912;"> ${title} </h3> ${subtitle && renderTemplate`<p${addAttribute(variant === "hero" ? "text-xs leading-tight" : "text-base md:text-lg", "class")} style="color: #BB8525;"> ${subtitle} </p>`} </div>`, addAttribute(formClasses[variant], "class"), addAttribute(variant, "data-variant"), addAttribute(`name-${variant}`, "for"), addAttribute(variant === "hero" ? "block text-xs font-semibold mb-1" : "block text-sm font-semibold mb-2", "class"), addAttribute(`name-${variant}`, "id"), addAttribute(`name-error-${variant}`, "aria-describedby"), addAttribute(inputClasses[variant], "class"), addAttribute(`name-error-${variant}`, "id"), addAttribute(`phone-${variant}`, "for"), addAttribute(variant === "hero" ? "block text-xs font-semibold mb-1" : "block text-sm font-semibold mb-2", "class"), addAttribute(`phone-${variant}`, "id"), addAttribute(`phone-error-${variant}`, "aria-describedby"), addAttribute(inputClasses[variant], "class"), addAttribute(siteConfig.business.phone, "placeholder"), addAttribute(`phone-error-${variant}`, "id"), variant !== "modal" && renderTemplate`<!-- Email for hero and inline forms -->
      <div> <label${addAttribute(`email-${variant}`, "for")}${addAttribute(variant === "hero" ? "block text-xs font-semibold mb-1" : "block text-sm font-semibold mb-2", "class")} style="color: #1D1912;">Email Address</label> <input type="email"${addAttribute(`email-${variant}`, "id")} name="email"${addAttribute(`email-error-${variant}`, "aria-describedby")}${addAttribute(inputClasses[variant], "class")} style="border-color: #EECD5C; background-color: white;" placeholder="your.email@example.com"> <div${addAttribute(`email-error-${variant}`, "id")} class="text-red-600 text-xs mt-1 hidden" role="alert"></div> </div>`, addAttribute(`street-${variant}`, "for"), addAttribute(variant === "hero" ? "block text-xs font-semibold mb-1" : "block text-sm font-semibold mb-2", "class"), addAttribute(`street-${variant}`, "id"), addAttribute(`street-error-${variant}`, "aria-describedby"), addAttribute(inputClasses[variant], "class"), addAttribute(`street-error-${variant}`, "id"), addAttribute(variant === "hero" ? "grid grid-cols-2 gap-2" : "grid grid-cols-3 gap-3", "class"), addAttribute(`city-${variant}`, "id"), addAttribute(`city-error-${variant}`, "aria-describedby"), addAttribute(inputClasses[variant], "class"), addAttribute(`city-error-${variant}`, "id"), addAttribute(`state-${variant}`, "id"), addAttribute(`state-error-${variant}`, "aria-describedby"), addAttribute(inputClasses[variant], "class"), addAttribute(`state-error-${variant}`, "id"), variant !== "hero" && renderTemplate`<div> <input type="text"${addAttribute(`zip-${variant}`, "id")} name="zip" required${addAttribute(`zip-error-${variant}`, "aria-describedby")}${addAttribute(inputClasses[variant], "class")} style="border-color: #EECD5C; background-color: white;" placeholder="Zip Code" autocomplete="postal-code" pattern="[0-9]{5}(-[0-9]{4})?"> <div${addAttribute(`zip-error-${variant}`, "id")} class="text-red-600 text-xs mt-1 hidden" role="alert"></div> </div>`, variant === "hero" && renderTemplate`<div class="mt-2"> <input type="text"${addAttribute(`zip-${variant}`, "id")} name="zip" required${addAttribute(`zip-error-${variant}`, "aria-describedby")}${addAttribute(inputClasses[variant], "class")} style="border-color: #EECD5C; background-color: white;" placeholder="Zip Code" autocomplete="postal-code" pattern="[0-9]{5}(-[0-9]{4})?"> <div${addAttribute(`zip-error-${variant}`, "id")} class="text-red-600 text-xs mt-1 hidden" role="alert"></div> </div>`, addAttribute(`service-${variant}`, "for"), addAttribute(variant === "hero" ? "block text-xs font-semibold mb-1" : "block text-sm font-semibold mb-2", "class"), addAttribute(`service-${variant}`, "id"), addAttribute(`service-error-${variant}`, "aria-describedby"), addAttribute(inputClasses[variant], "class"), services.map((serviceOption) => renderTemplate`<option${addAttribute(serviceOption, "value")}${addAttribute(service === serviceOption, "selected")}>${serviceOption}</option>`), addAttribute(service === "Not Sure", "selected"), service && !services.includes(service) && service !== "Not Sure" && renderTemplate`<option${addAttribute(service, "value")}${addAttribute(true, "selected")}>${service}</option>`, addAttribute(`service-error-${variant}`, "id"), variant !== "hero" && renderTemplate`<div> <label${addAttribute(`urgency-${variant}`, "for")} class="block text-sm font-semibold mb-2" style="color: #1D1912;">When do you need service?*</label> <select${addAttribute(`urgency-${variant}`, "id")} name="urgency" required${addAttribute(`urgency-error-${variant}`, "aria-describedby")}${addAttribute(inputClasses[variant], "class")} style="border-color: #EECD5C; background-color: white;"> <option value="">Select timeframe...</option> <option value="same-day">Same Day (Emergency)</option> <option value="next-day">Within 24 Hours</option> <option value="flexible">Within a Few Days</option> </select> <div${addAttribute(`urgency-error-${variant}`, "id")} class="text-red-600 text-xs mt-1 hidden" role="alert"></div> </div>`, variant !== "hero" && renderTemplate`<div> <label${addAttribute(`description-${variant}`, "for")} class="block text-sm font-semibold mb-2" style="color: #1D1912;">Tell us about the problem</label> <textarea${addAttribute(`description-${variant}`, "id")} name="description"${addAttribute(`description-error-${variant}`, "aria-describedby")}${addAttribute(inputClasses[variant], "class")} style="border-color: #EECD5C; background-color: white; min-height: 80px; resize: vertical;" placeholder="Describe what's happening with your garage door (optional but helpful)"></textarea> <div${addAttribute(`description-error-${variant}`, "id")} class="text-red-600 text-xs mt-1 hidden" role="alert"></div> </div>`, addAttribute(`consent-${variant}`, "id"), addAttribute(`consent-error-${variant}`, "aria-describedby"), addAttribute(`consent-${variant}`, "for"), addAttribute(variant === "hero" ? "text-xs leading-tight" : "text-sm leading-relaxed", "class"), addAttribute(`consent-error-${variant}`, "id"), addAttribute(buttonClasses[variant], "class"), addAttribute(buttonStyle, "style"), buttonText, variant !== "modal" && renderTemplate`<p${addAttribute(variant === "hero" ? "text-xs text-center mt-2" : "text-xs text-center mt-3", "class")} style="color: #BB8525;">
* Required fields. We respect your privacy and never share your information.
</p>`, renderScript($$result, "/Users/yaronhayo/Dev_Projects/Projects_2025/ez2fixV2/ez2fix-production/src/components/ui/BookingForm.astro?astro&type=script&index=0&lang.ts"), defineScriptVars({ recaptchaKey: void 0 }), renderScript($$result, "/Users/yaronhayo/Dev_Projects/Projects_2025/ez2fixV2/ez2fix-production/src/components/ui/BookingForm.astro?astro&type=script&index=1&lang.ts"));
}, "/Users/yaronhayo/Dev_Projects/Projects_2025/ez2fixV2/ez2fix-production/src/components/ui/BookingForm.astro", void 0);
export {
  $$BookingForm as $
};
